version: "2.4"

services:
  https:
    image: openresty/openresty:1.15.8.3-1-buster-fat-nosse42
    depends_on:
      graphql:
        condition: service_healthy
      api-private:
        condition: service_healthy
    environment:
      # point to both the application and the auth domain
      # they are separate because it makes auth logistically easier
      - "APP_FQDN=${APP_FQDN:-app1.dev}"
      - "APP_PORT=${APP_PORT:-443}"
    command: /start.sh
    volumes:
      - ./ingress/https/conf.d:/etc/nginx/conf.d
      - ./ingress/https:/app/https
      - ./ingress/https/start.sh:/start.sh
    networks:
      - default
    ports:
      - "${APP_PORT:-443}:443"
    logging:
      driver: ${LOGGING_HTTPS:-none}

  api-private:
    build:
      context: .
      target: api-private-builder
    command: just dev
    volumes:
      - ./api-private/src:/repo/api-private/src
      - ./api-private/justfile:/repo/api-private/justfile
      - ./api-private/package.json:/repo/api-private/package.json
      - ./api-private/package-lock.json:/repo/api-private/package-lock.json
      - ./api-private/tsconfig.json:/repo/api-private/tsconfig.json
    environment:
      - "NODE_ENV=development"
    ports:
      - "${PORT_API_PRIVATE:-8081}:8080"

  api-public:
    build:
      context: .
      target: api-public-builder
    command: just dev
    volumes:
      - ./api-public/src:/repo/api-public/src
      - ./api-public/justfile:/repo/api-public/justfile
      - ./api-public/package.json:/repo/api-public/package.json
      - ./api-public/package-lock.json:/repo/api-public/package-lock.json
      - ./api-public/tsconfig.json:/repo/api-public/tsconfig.json
      - ./browser/dist:/var/www/html/
    environment:
      - "NODE_ENV=development"

  graphql:
    volumes:
      # For the browser autogenerated graphql query/mutation types:
      - ./graphql/migrations:/hasura-migrations
      - ./graphql/metadata:/hasura-metadata
    ports:
      - "${PORT_GRAPHQL:-8080}:8080"

  # oauth manager, talks to github to validate oauth tokens
  vouch:
    volumes:
      - ./vouch/config:/config
      - vouch:/data

  postgres:
    ports:
      - "${PORT_DB:-5432}:5432"
