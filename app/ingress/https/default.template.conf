# default.conf is AUTOGENERATED

# Serve static assets and handle login requests
server {
  listen $APP_PORT ssl http2;
  listen [::]:$APP_PORT ssl; # IPv6 support
  server_name $APP_FQDN;

  # wide open cors for local development. In production ?
  # add_header 'Access-Control-Allow-Origin' "$http_origin" always;

  ssl_certificate /etc/nginx/conf.d/certs/$APP_FQDN.pem;
  ssl_certificate_key /etc/nginx/conf.d/certs/$APP_FQDN-key.pem;

  location / {
    proxy_pass http://api-public:8080;
    proxy_set_header Host $host;
  }

  location = /favicon.ico {
    return 204;
    access_log off;
    log_not_found off;
  }
}

server {
  listen $APP_PORT ssl http2;
  listen [::]:$APP_PORT ssl; # IPv6 support
  server_name oauth.$APP_FQDN;

  # wide open cors for local development. In production ?
  add_header 'Access-Control-Allow-Origin' "*";
  add_header 'Access-Control-Allow-Credentials' "true";

  ssl_certificate /etc/nginx/conf.d/certs/$APP_FQDN.pem;
  ssl_certificate_key /etc/nginx/conf.d/certs/$APP_FQDN-key.pem;

  location / {
    proxy_pass http://vouch:9090;
    proxy_set_header Host $host;
  }

  location = /favicon.ico {
    return 204;
    access_log off;
    log_not_found off;
  }
}

# graphql requests
server {
  listen $APP_PORT ssl http2;
  listen [::]:$APP_PORT ssl; # IPv6 support
  server_name graphql.$APP_FQDN;

  # wide open cors for local development. In production ?
  # add_header 'Access-Control-Allow-Origin' "$http_origin" always;

  ssl_certificate /etc/nginx/conf.d/certs/$APP_FQDN.pem;
  ssl_certificate_key /etc/nginx/conf.d/certs/$APP_FQDN-key.pem;

  # https://hasura.io/docs/1.0/graphql/manual/api-reference/index.html
  # next three blocks are routing websockets
  # and regular requests through the same path
  # https://serverfault.com/questions/910805/proxy-websockets-and-http-through-the-same-location-in-nginx
  location /v1 {
    try_files /nonexistent @$http_upgrade;
  }
  location @websocket {
    proxy_pass http://graphql:8080;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    # WebSocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
  location @ {
    proxy_set_header Host $host;
    proxy_pass http://graphql:8080;
  }
}
