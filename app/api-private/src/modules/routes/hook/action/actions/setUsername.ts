import { ActionPayload } from "../ActionPayload";
import { SetUsernameOutput } from "../../../../db/graphql/generated/sdk";

// Input types autogenerated from: http://localhost:9695/actions/manage/setUsername/codegen
// (required: <app/> just graphql console)
// Output types generated by sdk: http://localhost:9695/actions/manage/setUsername/relationships

type setUsernameArgs = {
    username: string
}

export async function setUsername(action: ActionPayload<setUsernameArgs>): Promise<SetUsernameOutput> {
    // do some kind of allow list or filtering of usernames here
    if (!action.session_variables["x-hasura-user-id"]) {
        action.request.log.error({ error: 'Missing x-hasura-user-id' });
        return { error: "Something went wrong" };
    }
    try {
        if (action.input.username.length < 2) {
            return { error: "username too short, needs to be at least two characters" };
        }
        const result = await action.request.db.SetUsername({ user: action.session_variables["x-hasura-user-id"], username: action.input.username });
        return { username: result.update_users.returning[0].username };
    } catch (err) {
        action.request.log.error({ error: err })
        return { error: "Name exists, try a different name" };
    }
}
